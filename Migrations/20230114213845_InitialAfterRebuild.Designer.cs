// <auto-generated />
using System;
using EntityFrameworkSample;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace virtualReality.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230114213845_InitialAfterRebuild")]
    partial class InitialAfterRebuild
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("virtualReality.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manufacturer = "Chris Games™",
                            Name = "Horror Game #1",
                            Price = 10.25m,
                            ReleaseDate = new DateTime(2023, 1, 14, 21, 38, 44, 736, DateTimeKind.Local).AddTicks(1162),
                            Url = "./wwwroot/css/assets/images/author.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Manufacturer = "Chris Games™",
                            Name = "Action Game #1",
                            Price = 59.99m,
                            ReleaseDate = new DateTime(2023, 1, 14, 21, 38, 44, 740, DateTimeKind.Local).AddTicks(4972),
                            Url = "./wwwroot/css/assets/images/author-02.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Manufacturer = "Chris Games™",
                            Name = "Action Game #2",
                            Price = 29.99m,
                            ReleaseDate = new DateTime(2023, 1, 14, 21, 38, 44, 740, DateTimeKind.Local).AddTicks(5038),
                            Url = "./wwwroot/css/assets/images/banner-01.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Manufacturer = "Chris Games™",
                            Name = "Action Game #2",
                            Price = 19.99m,
                            ReleaseDate = new DateTime(2023, 1, 14, 21, 38, 44, 740, DateTimeKind.Local).AddTicks(5049),
                            Url = "./wwwroot/css/assets/images/banner-02.jpg"
                        });
                });

            modelBuilder.Entity("virtualReality.Entities.GamesInGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GamesInGenres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 1,
                            GenreId = 1
                        },
                        new
                        {
                            Id = 2,
                            GameId = 2,
                            GenreId = 2
                        },
                        new
                        {
                            Id = 3,
                            GameId = 3,
                            GenreId = 1
                        },
                        new
                        {
                            Id = 4,
                            GameId = 4,
                            GenreId = 2
                        });
                });

            modelBuilder.Entity("virtualReality.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Action"
                        });
                });

            modelBuilder.Entity("virtualReality.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("virtualReality.Entities.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("virtualReality.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "test@email.com",
                            FirstName = "Nikola",
                            LastName = "Valchanov",
                            PasswordHash = "nikipass",
                            Phone = "070018100",
                            Role = "admin",
                            UserName = "nikiv"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
